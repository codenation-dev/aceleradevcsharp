// <auto-generated />
using System;
using CodenationRestaurante.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodenationRestaurante.Dados.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CodenationRestaurante.Dominio.Modelo.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("CodenationRestaurante.Dominio.Modelo.AgendaCardapio", b =>
                {
                    b.Property<int>("IdAgenda")
                        .HasColumnType("int");

                    b.Property<int>("IdCardapio")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("IdAgenda", "IdCardapio");

                    b.HasIndex("IdCardapio");

                    b.ToTable("AgendaCardapio");
                });

            modelBuilder.Entity("CodenationRestaurante.Dominio.Modelo.Cardapio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cardapio");
                });

            modelBuilder.Entity("CodenationRestaurante.Dominio.Modelo.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("CodenationRestaurante.Dominio.Modelo.Prato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CardapioId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("IdTipoPrato")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CardapioId");

                    b.HasIndex("IdTipoPrato");

                    b.ToTable("Prato");
                });

            modelBuilder.Entity("CodenationRestaurante.Dominio.Modelo.PratosIngredientes", b =>
                {
                    b.Property<int>("IdIngrediente")
                        .HasColumnType("int");

                    b.Property<int>("IdPrato")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("IdIngrediente", "IdPrato");

                    b.HasIndex("IdPrato");

                    b.ToTable("PratosIngredientes");
                });

            modelBuilder.Entity("CodenationRestaurante.Dominio.Modelo.TipoPrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoPrato");
                });

            modelBuilder.Entity("CodenationRestaurante.Dominio.Modelo.AgendaCardapio", b =>
                {
                    b.HasOne("CodenationRestaurante.Dominio.Modelo.Agenda", "Agenda")
                        .WithMany("AgendaCardapio")
                        .HasForeignKey("IdAgenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodenationRestaurante.Dominio.Modelo.Cardapio", "Cardapio")
                        .WithMany("AgendaCardapio")
                        .HasForeignKey("IdCardapio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CodenationRestaurante.Dominio.Modelo.Prato", b =>
                {
                    b.HasOne("CodenationRestaurante.Dominio.Modelo.Cardapio", null)
                        .WithMany("Prato")
                        .HasForeignKey("CardapioId");

                    b.HasOne("CodenationRestaurante.Dominio.Modelo.TipoPrato", "TipoPrato")
                        .WithMany("Pratos")
                        .HasForeignKey("IdTipoPrato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CodenationRestaurante.Dominio.Modelo.PratosIngredientes", b =>
                {
                    b.HasOne("CodenationRestaurante.Dominio.Modelo.Ingrediente", "Ingrediente")
                        .WithMany("PratosIngredientes")
                        .HasForeignKey("IdIngrediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodenationRestaurante.Dominio.Modelo.Prato", "Prato")
                        .WithMany("PratosIngredientes")
                        .HasForeignKey("IdPrato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
